#cloud-config

write_files:
  %{~ for f in files ~}
  - path: /var/app/${f.filename}
    permissions: %{ if substr(f.filename, -2, 2) == "sh"}0755%{else}0644%{endif}
    content: ${f.content}
    encoding: b64
  %{~ endfor ~}
  %{~ for c in docker_compose_files ~}
  - path: /etc/systemd/system/${coalesce(c.name, "app")}.service
    permissions: 0644
    content: |
      [Unit]
      Description=Docker Compose Service (${coalesce(c.name, "app")})
      Requires=docker.service ${join(" ", [ for f in docker_compose_files : "${f.name}.service" if f.name != null && c.name == null ])}
      After=docker.service
      ${ c.name == "caddy" ? "" : "Before=caddy.service" }

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory=/var/app
      EnvironmentFile=/var/app/.env
      ExecStartPre=-docker compose -f ${c.filename} pull --ignore-pull-failures
      ExecStart=docker compose -f ${c.filename} up -d
      ExecStop=docker compose -f ${c.filename} down -t 15

      [Install]
      WantedBy=multi-user.target

  %{~ endfor ~}
  - path: /etc/systemd/system/app-monitor.service
    permissions: 0644
    content: |
      [Unit]
      Description=Restart application

      [Service]
      Type=oneshot
      WorkingDirectory=/var/app
      EnvironmentFile=/var/app/.env
      ExecStart=/usr/bin/systemctl restart app.service

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/app-monitor.path
    permissions: 0644
    content: |
      [Unit]
      Description=Watch for updates to .env
      After=app.service

      [Path]
      PathChanged=/var/app/.env

      [Install]
      WantedBy=multi-user.target

runcmd:
  # Install Docker in a production-stable way
  # now that we are on a known-constant distro across all providers
  # from https://docs.docker.com/engine/install/ubuntu/
  - apt-get -qq update -y
  - apt-get -qq install -y ca-certificates curl gnupg lsb-release
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  # create apt sources file here instead of in write_files to prevent unsigned repo error in initial apt update
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
  - apt-get -qq update -y
  - apt-get -qq install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable --now docker.socket

  # Create network used by Traefik to identify running containers
  - "[ $(docker network list -q --filter=name=web) ] || docker network create web"
%{ if login != null }
  - docker login ${login}
%{ endif }
  - |
    while ! docker pull '${image}'; do
      echo '${image} not available yet. Sleeping for 30 seconds';
      sleep 30;
    done
  # Enable systemd services responsible for managing Docker Compose services
  - systemctl daemon-reload && systemctl enable --now app app-monitor.path
